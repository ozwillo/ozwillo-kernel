plugins {
  id("net.ltgt.errorprone") version "0.6"
  id("net.ltgt.apt") version "0.18"
  id("com.github.hierynomus.license") version "0.14.0"

  id("de.thetaphi.forbiddenapis") version "2.6" apply false
  id("nebula.deb") version "5.0.1" apply false
}
apply {
  from("./libraries.gradle")
}

group = "fr.pole-numerique.oasis"
version = "git describe --long".execute(null, rootDir).text.trim() - ~"^v"

ext.versionlessOutputs = project.hasProperty("versionlessOutputs") ? Boolean.parseBoolean(project.property("versionlessOutputs")) : false;

subprojects {
  apply {
    plugin("com.github.hierynomus.license")
  }
  license {
    header = rootProject.file("LICENSE.header")
    skipExistingHeaders = true
    include("**/*.java")
    include("**/*.soy")
    mapping("soy", "JAVADOC_STYLE")

    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = "The Ozwillo Kernel Authors"
  }
  downloadLicenses {
    ext.apacheTwo = license("Apache License, Version 2.0", "https://www.apache.org/licenses/LICENSE-2.0")
    ext.bsd = license("BSD License", "http://www.opensource.org/licenses/bsd-license.php")
    ext.mit = license("MIT License", "http://www.opensource.org/licenses/mit-license.php")
    ext.cddlOrGpl = license("CDDL or GPLv2 with exceptions", "https://glassfish.java.net/public/CDDL+GPL_1_1.html")

    licenses = [
      // libraries under several licenses: pick one
      (group("org.jboss.spec.javax.ws.rs")): cddlOrGpl
    ]
    aliases = [
      (apacheTwo): [ "Apache License, Version 2.0", "Apache License, version 2.0", "The Apache License, Version 2.0", "The Apache Software License, Version 2.0", "ASL", "Apache 2", "Apache 2.0", "Apache License 2.0" ],
      (bsd):       [ "The New BSD License", "BSD-like", "BSD", "BSD licence", "BSD 3-Clause", "3-Clause BSD License" ],
      (mit):       [ "Bouncy Castle Licence", "Unicode/ICU License", "MIT License", "MIT license", "The MIT License" ],
      (cddlOrGpl): [ "CDDL or GPLv2 with exceptions", "Dual license consisting of the CDDL v1.1 and GPL v2" ],
    ]
  }

  apply {
    plugin("net.ltgt.apt")
  }

  apply {
    plugin("net.ltgt.errorprone")
  }
  dependencies {
    errorprone("com.google.errorprone:error_prone_core:2.9.0")
  }

  apply {
    plugin("idea") // IDEA needs extra configuration for generated sources *sigh*
  }

  group = rootProject.group
  version = rootProject.version

  plugins.withType(JavaPlugin) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.apply {
      plugin("de.thetaphi.forbiddenapis")
    }
    forbiddenApis {
      bundledSignatures = [ "jdk-unsafe", "jdk-deprecated", "jdk-system-out" ]
    }

    tasks.withType(JavaCompile).configureEach {
      options.encoding = "UTF-8"
      options.compilerArgs += [ "-Werror", "-Xlint:all", "-Xlint:-processing", "-Xlint:-serial", "-Xlint:-path" ]
    }

    if (versionlessOutputs) {
      tasks.withType(AbstractArchiveTask).configureEach {
        archiveName = "${baseName}.${extension}"
      }
    }
  }
}
