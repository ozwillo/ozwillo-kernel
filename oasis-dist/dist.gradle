import com.netflix.gradle.plugins.deb.Deb
import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id("base")
  id("nebula.deb")
}

description = ""

ext.oasis = [
  home:         "/usr/lib/oasis",
  service:      "oasis",
  desc:         "OASIS kernel",
  user:         "oasis",
  group:        "oasis",
]
// Turns 1.2.3-45-g789abcd into 1.2.3~45.g789abcd; but use 0.0.0 when versionlessOutputs==true.
// Note: this is similar to the versions produced by git-buildpackage, except for the "gbp" marker replaced with git-describe"s "g"
ext.debianVersion = versionlessOutputs ? "0.0.0" : project.version.replaceAll("^([^-]+)-([^-]+)-([^-]+)\$", "\$1~\$2.\$3")

configurations {
  distLib
}

dependencies {
  distLib(project(path: ":oasis-webapp", configuration: "runtime"))
}

tasks.register("deb", Deb) {
  outputs.cacheIf { true }

  packageName = oasis.service
  version = debianVersion
  packageDescription = oasis.desc
  maintainer = "Thomas Broyer <tbr@atolcd.com>"
  packageGroup = "misc"
  distribution = "development"

  user = oasis.user
  permissionGroup = oasis.group

  requires("default-jre")
  requires("adduser", "3.11", GREATER | EQUAL)
  requires("lsb-base", "3.2-14", GREATER | EQUAL)

  dirMode = 0755
  fileMode = 0644

  from(configurations.distLib) {
    into("${oasis.home}/lib")
  }
  from("src/etc/") {
    into("/etc/${oasis.service}")
    filter(ReplaceTokens, tokens: [
      "oasis.home":     oasis.home,
      "oasis.service":  oasis.service,
      "oasis.desc":     oasis.desc,
      "oasis.user":     oasis.user,
      "oasis.group":    oasis.group,
      ])
    eachFile { configurationFile(it.path) }
  }
  directory("/var/log/${oasis.service}", 0755)
  from("src/linux/daemon.sh") {
    into(oasis.home)
    rename("daemon.sh", oasis.service)
    fileMode = 0775
  }
  from("src/deb/etc/init.d/service.sh") {
    into("/etc/init.d/")
    rename("service.sh", oasis.service)
    filter(ReplaceTokens, tokens: [
      "oasis.home":     oasis.home,
      "oasis.service":  oasis.service,
      "oasis.desc":     oasis.desc,
      "oasis.user":     oasis.user,
      "oasis.group":    oasis.group,
      ])
    user("root")
    permissionGroup("root")
    fileMode = 0755
  }
  from("src/deb/etc/default/service-config") {
    into("/etc/default/")
    rename("service-config", oasis.service)
    filter(ReplaceTokens, tokens: [
      "oasis.home":     oasis.home,
      "oasis.service":  oasis.service,
      "oasis.desc":     oasis.desc,
      "oasis.user":     oasis.user,
      "oasis.group":    oasis.group,
      ])
    user("root")
    permissionGroup("root")
    eachFile { configurationFile(it.path) }
  }

  inputs.dir("src/deb/control")
  inputs.properties(oasis)
  inputs.property("debianVersion", debianVersion)
  doFirst {
    copy {
      from("src/deb/control")
      into("$buildDir/tmp/debControl")
      filter(ReplaceTokens, tokens: [
        "name":           oasis.service,
        "version":        debianVersion,
        "oasis.home":     oasis.home,
        "oasis.service":  oasis.service,
        "oasis.desc":     oasis.desc,
        "oasis.user":     oasis.user,
        "oasis.group":    oasis.group,
        ])
    }

    preInstallFile = file("$buildDir/tmp/debControl/preinst")
    postInstallFile = file("$buildDir/tmp/debControl/postinst")
    preUninstallFile = file("$buildDir/tmp/debControl/prerm")
    postUninstallFile = file("$buildDir/tmp/debControl/postrm")
  }
}
tasks.named("assemble").configure { dependsOn("deb") }

downloadLicenses {
  dependencyConfiguration = "distLib"
}
